service: premier-predictor

custom:
  secrets: ${file(secrets.json)}

provider:
  name: aws
  profile: personal
  region: us-east-1
  logRetentionInDays: 14
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "*"
  environment:
    DATABASE_URL: ${self:custom.secrets.dbUrl}
    DATABASE_USERNAME: ${self:custom.secrets.dbUser}
    DATABASE_PASSWORD: ${self:custom.secrets.dbPassword}
    DYNAMO_DB_ENDPOINT: ${self:custom.secrets.dynamoDbEndpoint}
    DYNAMO_DB_ACCESS_KEY: ${self:custom.secrets.dynamoDbAccessKey}
    DYNAMO_DB_SECRET_KEY: ${self:custom.secrets.dynamoDbSecretKey}
    REDIS_HOST: ${self:custom.secrets.redisHost}
    REDIS_PORT: ${self:custom.secrets.redisPort}
    REDIS_PASSWORD: ${self:custom.secrets.redisPassword}
    API_KEY: ${self:custom.secrets.apiKey}
    API_URL: ${self:custom.secrets.apiUrl}
    API_COMMENTARY_URL: ${self:custom.secrets.apiCommentaryUrl}
    SEND_GRID_API_KEY: ${self:custom.secrets.sendgridApiKey}
    PHONE_NUMBER: ${self:custom.secrets.phoneNumber}
    MESSENGER_CLIENT_URL: ${self:custom.secrets.messengerClientUrl}
    MONGO_SCHEME: ${self:custom.secrets.mongoScheme}
    MONGO_USERNAME: ${self:custom.secrets.mongoUsername}
    MONGO_PASSWORD: ${self:custom.secrets.mongoPassword}
    MONGO_HOST: ${self:custom.secrets.mongoHost}
    MONGO_PORT: ${self:custom.secrets.mongoPort}

package:
 exclude:
   - common/**
   - data-retriever/**
   - match-update/**
   - user-score-updater/**
   - match-data-refresh/**
   - live-match-check/**
   - send-email/**
   - score-update/**
   - get-live-matches/**
   - fixture-update/**
   - heroku-liveness-probe/**
   - screenshots/**
   - send-message/**
 include:
   - match-update/build/libs/match-update-0.0.1-SNAPSHOT-aws.jar
   - user-score-updater/build/libs/user-score-updater-0.0.1-SNAPSHOT-aws.jar
   - match-data-refresh/build/libs/match-data-refresh-0.0.1-SNAPSHOT-aws.jar
   - live-match-check/bin/**
   - send-email/bin/**
   - send-message/bin/**
   - score-update/bin/**
   - get-live-matches/bin/**
   - heroku-liveness-probe/bin/**

functions:
  match-update:
    runtime: java8
    memorySize: 1592
    timeout: 60
    handler: com.cshep4.premierpredictor.matchupdate.handler.aws.MatchUpdateHandler
    environment:
      FUNCTION_NAME: matchUpdate
    package:
      artifact: match-update/build/libs/match-update-0.0.1-SNAPSHOT-aws.jar
    events:
      - schedule: rate(1 minute)
  user-score-updater:
    runtime: java8
    memorySize: 1592
    timeout: 60
    handler: com.cshep4.premierpredictor.userscoreupdater.handler.aws.UserScoreUpdaterHandler
    environment:
      FUNCTION_NAME: userScoreUpdater
    package:
      artifact: user-score-updater/build/libs/user-score-updater-0.0.1-SNAPSHOT-aws.jar
    events:
      - http:
          path: user/score
          resp: http
          method: put
          cors: true
  match-data-refresh:
    runtime: java8
    memorySize: 2048
    timeout: 600
    handler: com.cshep4.premierpredictor.matchdatarefresh.handler.aws.MatchDataRefreshHandler
    environment:
      FUNCTION_NAME: matchDataRefresh
    package:
      artifact: match-data-refresh/build/libs/match-data-refresh-0.0.1-SNAPSHOT-aws.jar
    events:
      - schedule: cron(0 3 ? * * *)
  live-match-check:
    runtime: go1.x
    handler: live-match-check/bin/main
    events:
      - schedule: rate(5 minutes)
  send-email:
    runtime: go1.x
    handler: send-email/bin/sqs/main
    reservedConcurrency: 10
    events:
      - sqs: arn:aws:sqs:us-east-1:925427442847:SendEmail
  send-email-http:
    runtime: go1.x
    handler: send-email/bin/http/main
    events:
      - http:
          path: email
          resp: http
          method: post
          cors: true
  score-update:
    runtime: go1.x
    timeout: 60
    handler: score-update/bin/main
    events:
      - schedule: cron(15 22 ? * * *)
  get-live-matches:
    runtime: go1.x
    handler: get-live-matches/bin/main
    events:
      - http:
          path: live
          resp: http
          method: get
          cors: true
  messenger:
    runtime: nodejs8.10
    handler: messenger/handler.messenger
    environment:
      ACCESS_TOKEN: ${self:custom.secrets.messengerAccessToken}
      VERIFY_TOKEN: ${self:custom.secrets.messengerVerifyToken}
      FUNCTION_NAME: premier-predictor-dev-get-live-matches
    events:
      - http:
          path: messenger
          method: post
          cors: true
          integration: lambda
      - http:
          path: messenger
          method: get
          cors: true
          integration: lambda
  send-message:
    runtime: go1.x
    handler: send-message/bin/main
    environment:
      ACCESS_TOKEN: ${self:custom.secrets.messengerAccessToken}
      PSID: ${self:custom.secrets.psid}
    events:
      - http:
          path: messenger/send
          resp: http
          method: post
          cors: true
#   fixture-update:
#     runtime: nodejs8.10
#     handler: fixture-update/index.handler
#     events:
#       - schedule: cron(0 3 ? * * *)
#  heroku-liveness-probe:
#    runtime: go1.x
#    handler: heroku-liveness-probe/bin/main
#    environment:
#      HEROKU_API_KEY: ${self:custom.secrets.herokuApiKey}
#      HEROKU_HEALTH_URL: ${self:custom.secrets.herokuHealthUrl}
#    events:
#      - schedule: rate(1 minute)
