service: premier-predictor

custom:
  secrets: ${file(secrets.json)}

provider:
  name: aws
  profile: personal
  region: us-east-1
  logRetentionInDays: 14
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "*"
  environment:
    DATABASE_URL: ${self:custom.secrets.dbUrl}
    DATABASE_USERNAME: ${self:custom.secrets.dbUser}
    DATABASE_PASSWORD: ${self:custom.secrets.dbPassword}
    DYNAMO_DB_ENDPOINT: ${self:custom.secrets.dynamoDbEndpoint}
    DYNAMO_DB_ACCESS_KEY: ${self:custom.secrets.dynamoDbAccessKey}
    DYNAMO_DB_SECRET_KEY: ${self:custom.secrets.dynamoDbSecretKey}
    REDIS_HOST: ${self:custom.secrets.redisHost}
    REDIS_PORT: ${self:custom.secrets.redisPort}
    REDIS_PASSWORD: ${self:custom.secrets.redisPassword}
    API_KEY: ${self:custom.secrets.apiKey}
    API_URL: ${self:custom.secrets.apiUrl}
    API_COMMENTARY_URL: ${self:custom.secrets.apiCommentaryUrl}
    SEND_GRID_API_KEY: ${self:custom.secrets.sendgridApiKey}
    PHONE_NUMBER: ${self:custom.secrets.phoneNumber}
    MESSENGER_CLIENT_URL: ${self:custom.secrets.messengerClientUrl}

package:
 exclude:
   - common/**
   - match-update/**
   - match-data-refresh/**
   - live-match-check/**
   - score-update/**
   - get-live-matches/**
   - fixture-update/**
   - heroku-liveness-probe/**
   - test-kotlin-quarkus/**
   - message-builder/**
 include:
   - match-update/build/libs/match-update-0.0.1-SNAPSHOT-aws.jar
   - match-data-refresh/build/libs/match-data-refresh-0.0.1-SNAPSHOT-aws.jar
   - live-match-check/bin/**
   - score-update/bin/**
   - get-live-matches/bin/**
   - heroku-liveness-probe/bin/**
   - message-builder/build/package/bundle.zip

functions:
  # fixture-update:
  #   runtime: nodejs8.10
  #   handler: fixture-update/index.handler
  #   events:
  #     - schedule: cron(0 3 ? * * *)
  match-update:
    runtime: java8
    memorySize: 1592
    timeout: 60
    handler: com.cshep4.premierpredictor.matchupdate.handler.aws.MatchUpdateHandler
    environment:
      FUNCTION_NAME: matchUpdate
    package:
      artifact: match-update/build/libs/match-update-0.0.1-SNAPSHOT-aws.jar
    events:
      - schedule: rate(1 minute)
  match-data-refresh:
    runtime: java8
    memorySize: 2048
    timeout: 600
    handler: com.cshep4.premierpredictor.matchdatarefresh.handler.aws.MatchDataRefreshHandler
    environment:
      FUNCTION_NAME: matchDataRefresh
    package:
      artifact: match-data-refresh/build/libs/match-data-refresh-0.0.1-SNAPSHOT-aws.jar
    events:
      - schedule: cron(0 3 ? * * *)
  live-match-check:
    runtime: go1.x
    handler: live-match-check/bin/main
    events:
      - schedule: rate(5 minutes)
  score-update:
    runtime: go1.x
    timeout: 60
    handler: score-update/bin/main
    events:
      - schedule: cron(15 22 ? * * *)
  get-live-matches:
    runtime: go1.x
    handler: get-live-matches/bin/main
    events:
      - http:
          path: live
          resp: http
          method: get
          cors: true
  messenger:
    runtime: nodejs8.10
    handler: messenger/handler.messenger
    environment:
      ACCESS_TOKEN: ${self:custom.secrets.messengerAccessToken}
      VERIFY_TOKEN: ${self:custom.secrets.messengerVerifyToken}
      FUNCTION_NAME: premier-predictor-dev-get-live-matches
    events:
      - http:
          path: messenger
          method: post
          cors: true
          integration: lambda
      - http:
          path: messenger
          method: get
          cors: true
          integration: lambda
  send-message:
    runtime: go1.x
    handler: send-message/bin/main
    environment:
      ACCESS_TOKEN: ${self:custom.secrets.messengerAccessToken}
      PSID: ${self:custom.secrets.psid}
    events:
      - http:
          path: messenger/send
          resp: http
          method: post
          cors: true
  heroku-liveness-probe:
    runtime: go1.x
    handler: heroku-liveness-probe/bin/main
    environment:
      HEROKU_API_KEY: ${self:custom.secrets.herokuApiKey}
      HEROKU_HEALTH_URL: ${self:custom.secrets.herokuHealthUrl}
    events:
      - schedule: rate(1 minute)
  message-builder:
    handler: not.used
    package:
      artifact: message-builder/build/package/bundle.zip
    runtime: provided
    events:
      - http:
          path: /message/build
          method: post
#  test-kotlin-quarkus:
#    handler: not.used
#    package:
#      artifact: test-kotlin-quarkus/build/package/bundle.zip
#    runtime: provided
#    events:
#      - http:
#          path: /ping
#          method: get
#      - http:
#          path: /greet/{name}
#          method: get
