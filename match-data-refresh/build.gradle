import com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer

buildscript {
	ext {
		kotlinVersion = '1.3.10'
		springBootVersion = '2.0.2.RELEASE'
        shadowVersion = '2.0.1'
	}
	repositories {
		mavenCentral()
        jcenter()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
		classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
        classpath "com.github.jengelman.gradle.plugins:shadow:${shadowVersion}"
		classpath "org.owasp:dependency-check-gradle:3.2.1"
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.owasp.dependencycheck'

group = 'com.cshep4.premierpredictor.matchdatarefresh'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	jcenter()
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}

ext {
    springCloudVersion = 'Finchley.RC2'
    springCloudFunctionVersion = "1.0.0.BUILD-SNAPSHOT"
    awsLambdaEventsVersion = "2.1.0"
    awsLambdaCoreVersion = "1.1.0"
}

jar {
    manifest {
        attributes(
            'Start-Class': 'com.cshep4.premierpredictor.matchdatarefresh.ServerlessApplication'
        )
    }

	exclude('src/premier-predictor-functions/match-data-refresh/src/main/resources/application-local.properties')
}

assemble.dependsOn = [shadowJar, bootJar]

shadowJar {
    classifier = 'aws'
    // Required for Spring
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    transform(PropertiesFileTransformer) {
        paths = [
                'META-INF/spring.factories',
                'META-INF/spring.provides',
                'META-INF/spring-autoconfigure-metadata.properties',
        ]
        mergeStrategy = "append"
    }
}

dependencies {
	compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	compile "org.jetbrains.kotlin:kotlin-reflect"

    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.5"
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.5"
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile "org.springframework.cloud:spring-cloud-function-adapter-aws"
	compile "org.springframework.boot:spring-boot-starter-web"

    compile "com.amazonaws:aws-lambda-java-events:${awsLambdaEventsVersion}"
    compile "com.amazonaws:aws-lambda-java-core:${awsLambdaCoreVersion}"

	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.0'

	implementation 'com.github.kittinunf.fuel:fuel:1.15.1'
	compile 'com.sendgrid:sendgrid-java:4.0.1'
	compile 'javax.xml.bind:jaxb-api:2.3.0'
	compile group: 'org.postgresql', name: 'postgresql', version: '42.1.1'
	compile group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.11.251'
	compile group: 'com.github.spring-data-dynamodb', name: 'spring-data-dynamodb', version: '5.0.2'
	compile group: 'com.amazonaws', name: 'aws-java-sdk-sns'

	runtime('mysql:mysql-connector-java')

	testCompile "org.springframework.boot:spring-boot-starter-test"
	testCompile("com.nhaarman:mockito-kotlin:1.+")
	testCompile "io.mockk:mockk:1.7.15"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task deploy(type: Exec, dependsOn: assemble) {
    commandLine 'serverless', 'deploy'
}
